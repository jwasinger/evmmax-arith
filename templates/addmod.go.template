{{ $limbCount := .LimbCount}}
{{ $lastLimb := sub $limbCount 1}}
{{ $limbBits := .LimbBits}}

// TODO check unrolled speed
func AddModNonUnrolled{{mul $limbCount $limbBits}}(f *Field, out_bytes, x_bytes, y_bytes []byte) (error) {
	x := (*[{{$limbCount}}]uint64)(unsafe.Pointer(&x_bytes[0]))[:]
	y := (*[{{$limbCount}}]uint64)(unsafe.Pointer(&y_bytes[0]))[:]
	z := (*[{{$limbCount}}]uint64)(unsafe.Pointer(&out_bytes[0]))[:]
    mod := f.Modulus

    {{ template "GTE" dict "limbCount" $limbCount "x" "x" "y" "y" "z" "mod"}}

    var c uint64 = 0
    tmp := make([]uint64, {{$limbCount}})

    {{- range $i := intRange 0 $limbCount }}
        tmp[{{$i}}], c = bits.Add64(x[{{$i}}], y[{{$i}}], c)
    {{- end }}

    c = 0
    {{- range $i := intRange 0 $limbCount }}
        z[{{$i}}], c = bits.Sub64(tmp[{{$i}}], mod[{{$i}}], c)
    {{- end }}

    // final sub was unnecessary
    if c != 0 {
        copy(z, tmp[:])
    }/* else {
        panic("not worst case performance")
    }*/
    return nil
}
