{{ $limbCount := .LimbCount}}
{{ $lastLimb := sub $limbCount 1}}
{{ $limbBits := .LimbBits}}

func SubModNonUnrolled{{mul $limbCount $limbBits}}(f *Field, out_bytes, x_bytes, y_bytes []byte) (error) {
	x := (*[{{$limbCount}}]uint64)(unsafe.Pointer(&x_bytes[0]))[:]
	y := (*[{{$limbCount}}]uint64)(unsafe.Pointer(&y_bytes[0]))[:]
	z := (*[{{$limbCount}}]uint64)(unsafe.Pointer(&out_bytes[0]))[:]
	mod := (*[{{$limbCount}}]uint64)(unsafe.Pointer(&f.Modulus[0]))[:]

    {{ template "GTE" dict "limbCount" $limbCount "x" "x" "y" "y" "z" "mod"}}

	var c, c1 uint64
	tmp := {{ makeZeroedLimbs $limbCount}}

    {{- range $i := intRange 0 $limbCount }}
        tmp[{{$i}}], c = bits.Sub64(x[{{$i}}], y[{{$i}}], c)
    {{- end }}

    {{- range $i := intRange 0 $limbCount }}
        z[{{$i}}], c1 = bits.Add64(tmp[{{$i}}], mod[{{$i}}], c1)
    {{- end }}

	if c == 0 {
		copy(z, tmp[:])
    }/* else {
        panic("not worst case performance")
    }*/

	return nil
}
