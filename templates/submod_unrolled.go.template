{{ $limbCount := .LimbCount}}
{{ $limbCountSub1 := sub .LimbCount 1}}
{{ $lastLimb := sub $limbCount 1}}
{{ $limbBits := .LimbBits}}

func SubMod{{mul $limbCount $limbBits}}(out, x, y, mod []uint64) {
    var c uint64 = 0
    var c1 uint64 = 0
	tmp := {{ makeZeroedLimbs $limbCount}}

    for i := 0; i < {{$limbCount}}; i++ {
        tmp[i], c = bits.Sub64(x[i], y[i], c)
    }

    for i := 0; i < {{$limbCount}}; i++ {
        out[i], c1 = bits.Add64(tmp[i], mod[i], c1)
    }

    var src []uint64
    // final sub was unnecessary, but do the copy anyways to make the impl constant time
    if c == 0 {
        src = tmp[:]
    } else {
        src = out[:]
    }

    copy(out[:], src[:])
}
