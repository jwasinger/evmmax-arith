package mont_arith

type benchRange struct {
	min uint
	max uint
}

type ArithPreset struct {
	AddModImpls       []arithFunc
	SubModImpls       []arithFunc
	MulMontImpls      []arithFunc
	name              string
	mulMontCIOSCutoff uint

	benchRanges map[string]benchRange
}

func makeBenchRanges(addModMin, addModMax, subModMin, subModMax, mulMontMin, mulMontMax uint) map[string]benchRange {
	return map[string]benchRange{
		"addmod":  {addModMin, addModMax},
		"submod":  {subModMin, subModMax},
		"mulmont": {mulMontMin, mulMontMax},
	}
}

func (a *ArithPreset) MaxLimbCount() uint {
	return uint(len(a.MulMontImpls))
}

// Preset same as default except it uses blst's go-asm impl of the arithmetic at 384bit widths
func Asm384Preset() ArithPreset {
	addModImpls := []arithFunc{
		AddModNonUnrolled64,
		AddModNonUnrolled128,
		AddModNonUnrolled192,
		AddModNonUnrolled256,
		AddModNonUnrolled320,
		AddMod384_asm,
		AddModNonUnrolled448,
		AddModNonUnrolled512,
		AddModNonUnrolled576,
		AddModNonUnrolled640,
		AddModNonUnrolled704,
		AddModNonUnrolled768,
		AddModNonUnrolled832,
		AddModNonUnrolled896,
		AddModNonUnrolled960,
		AddModNonUnrolled1024,
		AddModNonUnrolled1088,
		AddModNonUnrolled1152,
		AddModNonUnrolled1216,
		AddModNonUnrolled1280,
		AddModNonUnrolled1344,
		AddModNonUnrolled1408,
		AddModNonUnrolled1472,
		AddModNonUnrolled1536,
		AddModNonUnrolled1600,
		AddModNonUnrolled1664,
		AddModNonUnrolled1728,
		AddModNonUnrolled1792,
		AddModNonUnrolled1856,
		AddModNonUnrolled1920,
		AddModNonUnrolled1984,
		AddModNonUnrolled2048,
		AddModNonUnrolled2112,
		AddModNonUnrolled2176,
		AddModNonUnrolled2240,
		AddModNonUnrolled2304,
		AddModNonUnrolled2368,
		AddModNonUnrolled2432,
		AddModNonUnrolled2496,
		AddModNonUnrolled2560,
		AddModNonUnrolled2624,
		AddModNonUnrolled2688,
		AddModNonUnrolled2752,
		AddModNonUnrolled2816,
		AddModNonUnrolled2880,
		AddModNonUnrolled2944,
		AddModNonUnrolled3008,
		AddModNonUnrolled3072,
		AddModNonUnrolled3136,
		AddModNonUnrolled3200,
		AddModNonUnrolled3264,
		AddModNonUnrolled3328,
		AddModNonUnrolled3392,
		AddModNonUnrolled3456,
		AddModNonUnrolled3520,
		AddModNonUnrolled3584,
		AddModNonUnrolled3648,
		AddModNonUnrolled3712,
		AddModNonUnrolled3776,
		AddModNonUnrolled3840,
		AddModNonUnrolled3904,
		AddModNonUnrolled3968,
		AddModNonUnrolled4032,
		AddModNonUnrolled4096,
	}

	subModImpls := []arithFunc{
		SubModNonUnrolled64,
		SubModNonUnrolled128,
		SubModNonUnrolled192,
		SubModNonUnrolled256,
		SubModNonUnrolled320,
		SubMod384_asm,
		SubModNonUnrolled448,
		SubModNonUnrolled512,
		SubModNonUnrolled576,
		SubModNonUnrolled640,
		SubModNonUnrolled704,
		SubModNonUnrolled768,
		SubModNonUnrolled832,
		SubModNonUnrolled896,
		SubModNonUnrolled960,
		SubModNonUnrolled1024,
		SubModNonUnrolled1088,
		SubModNonUnrolled1152,
		SubModNonUnrolled1216,
		SubModNonUnrolled1280,
		SubModNonUnrolled1344,
		SubModNonUnrolled1408,
		SubModNonUnrolled1472,
		SubModNonUnrolled1536,
		SubModNonUnrolled1600,
		SubModNonUnrolled1664,
		SubModNonUnrolled1728,
		SubModNonUnrolled1792,
		SubModNonUnrolled1856,
		SubModNonUnrolled1920,
		SubModNonUnrolled1984,
		SubModNonUnrolled2048,
		SubModNonUnrolled2112,
		SubModNonUnrolled2176,
		SubModNonUnrolled2240,
		SubModNonUnrolled2304,
		SubModNonUnrolled2368,
		SubModNonUnrolled2432,
		SubModNonUnrolled2496,
		SubModNonUnrolled2560,
		SubModNonUnrolled2624,
		SubModNonUnrolled2688,
		SubModNonUnrolled2752,
		SubModNonUnrolled2816,
		SubModNonUnrolled2880,
		SubModNonUnrolled2944,
		SubModNonUnrolled3008,
		SubModNonUnrolled3072,
		SubModNonUnrolled3136,
		SubModNonUnrolled3200,
		SubModNonUnrolled3264,
		SubModNonUnrolled3328,
		SubModNonUnrolled3392,
		SubModNonUnrolled3456,
		SubModNonUnrolled3520,
		SubModNonUnrolled3584,
		SubModNonUnrolled3648,
		SubModNonUnrolled3712,
		SubModNonUnrolled3776,
		SubModNonUnrolled3840,
		SubModNonUnrolled3904,
		SubModNonUnrolled3968,
		SubModNonUnrolled4032,
		SubModNonUnrolled4096,
	}
	mulMontImpls := []arithFunc{
		MulMontNonUnrolled64,
		MulMontNonUnrolled128,
		MulMontNonUnrolled192,
		MulMontNonUnrolled256,
		MulMontNonUnrolled320,
		MulMont384_asm,
		MulMontNonUnrolled448,
		MulMontNonUnrolled512,
		MulMontNonUnrolled576,
		MulMontNonUnrolled640,
		MulMontNonUnrolled704,
		MulMontNonUnrolled768,
		MulMontNonUnrolled832,
		MulMontNonUnrolled896,
		MulMontNonUnrolled960,
		MulMontNonUnrolled1024,
		MulMontNonUnrolled1088,
		MulMontNonUnrolled1152,
		MulMontNonUnrolled1216,
		MulMontNonUnrolled1280,
		MulMontNonUnrolled1344,
		MulMontNonUnrolled1408,
		MulMontNonUnrolled1472,
		MulMontNonUnrolled1536,
		MulMontNonUnrolled1600,
		MulMontNonUnrolled1664,
		MulMontNonUnrolled1728,
		MulMontNonUnrolled1792,
		MulMontNonUnrolled1856,
		MulMontNonUnrolled1920,
		MulMontNonUnrolled1984,
		MulMontNonUnrolled2048,
		MulMontNonUnrolled2112,
		MulMontNonUnrolled2176,
		MulMontNonUnrolled2240,
		MulMontNonUnrolled2304,
		MulMontNonUnrolled2368,
		MulMontNonUnrolled2432,
		MulMontNonUnrolled2496,
		MulMontNonUnrolled2560,
		MulMontNonUnrolled2624,
		MulMontNonUnrolled2688,
		MulMontNonUnrolled2752,
		MulMontNonUnrolled2816,
		MulMontNonUnrolled2880,
		MulMontNonUnrolled2944,
		MulMontNonUnrolled3008,
		MulMontNonUnrolled3072,
		MulMontNonUnrolled3136,
		MulMontNonUnrolled3200,
		MulMontNonUnrolled3264,
		MulMontNonUnrolled3328,
		MulMontNonUnrolled3392,
		MulMontNonUnrolled3456,
		MulMontNonUnrolled3520,
		MulMontNonUnrolled3584,
		MulMontNonUnrolled3648,
		MulMontNonUnrolled3712,
		MulMontNonUnrolled3776,
		MulMontNonUnrolled3840,
		MulMontNonUnrolled3904,
		MulMontNonUnrolled3968,
		MulMontNonUnrolled4032,
		MulMontNonUnrolled4096,
	}

	return ArithPreset{addModImpls, subModImpls, mulMontImpls, "asm384", 65,
		makeBenchRanges(6, 6,
			6, 6,
			6, 6),
	}
}

func UnrolledPreset() ArithPreset {
	// full unrolled for addmod/submod.  only first limb counts up to 32 for mulmont

	addModImpls := []arithFunc{
		AddModUnrolled64,
		AddModUnrolled128,
		AddModUnrolled192,
		AddModUnrolled256,
		AddModUnrolled320,
		AddModUnrolled384,
		AddModUnrolled448,
		AddModUnrolled512,
		AddModUnrolled576,
		AddModUnrolled640,
		AddModUnrolled704,
		AddModUnrolled768,
		AddModUnrolled832,
		AddModUnrolled896,
		AddModUnrolled960,
		AddModUnrolled1024,
		AddModUnrolled1088,
		AddModUnrolled1152,
		AddModUnrolled1216,
		AddModUnrolled1280,
		AddModUnrolled1344,
		AddModUnrolled1408,
		AddModUnrolled1472,
		AddModUnrolled1536,
		AddModUnrolled1600,
		AddModUnrolled1664,
		AddModUnrolled1728,
		AddModUnrolled1792,
		AddModUnrolled1856,
		AddModUnrolled1920,
		AddModUnrolled1984,
		AddModUnrolled2048,
		AddModUnrolled2112,
		AddModUnrolled2176,
		AddModUnrolled2240,
		AddModUnrolled2304,
		AddModUnrolled2368,
		AddModUnrolled2432,
		AddModUnrolled2496,
		AddModUnrolled2560,
		AddModUnrolled2624,
		AddModUnrolled2688,
		AddModUnrolled2752,
		AddModUnrolled2816,
		AddModUnrolled2880,
		AddModUnrolled2944,
		AddModUnrolled3008,
		AddModUnrolled3072,
		AddModUnrolled3136,
		AddModUnrolled3200,
		AddModUnrolled3264,
		AddModUnrolled3328,
		AddModUnrolled3392,
		AddModUnrolled3456,
		AddModUnrolled3520,
		AddModUnrolled3584,
		AddModUnrolled3648,
		AddModUnrolled3712,
		AddModUnrolled3776,
		AddModUnrolled3840,
		AddModUnrolled3904,
		AddModUnrolled3968,
		AddModUnrolled4032,
		AddModUnrolled4096,
	}

	subModImpls := []arithFunc{
		SubModUnrolled64,
		SubModUnrolled128,
		SubModUnrolled192,
		SubModUnrolled256,
		SubModUnrolled320,
		SubModUnrolled384,
		SubModUnrolled448,
		SubModUnrolled512,
		SubModUnrolled576,
		SubModUnrolled640,
		SubModUnrolled704,
		SubModUnrolled768,
		SubModUnrolled832,
		SubModUnrolled896,
		SubModUnrolled960,
		SubModUnrolled1024,
		SubModUnrolled1088,
		SubModUnrolled1152,
		SubModUnrolled1216,
		SubModUnrolled1280,
		SubModUnrolled1344,
		SubModUnrolled1408,
		SubModUnrolled1472,
		SubModUnrolled1536,
		SubModUnrolled1600,
		SubModUnrolled1664,
		SubModUnrolled1728,
		SubModUnrolled1792,
		SubModUnrolled1856,
		SubModUnrolled1920,
		SubModUnrolled1984,
		SubModUnrolled2048,
		SubModUnrolled2112,
		SubModUnrolled2176,
		SubModUnrolled2240,
		SubModUnrolled2304,
		SubModUnrolled2368,
		SubModUnrolled2432,
		SubModUnrolled2496,
		SubModUnrolled2560,
		SubModUnrolled2624,
		SubModUnrolled2688,
		SubModUnrolled2752,
		SubModUnrolled2816,
		SubModUnrolled2880,
		SubModUnrolled2944,
		SubModUnrolled3008,
		SubModUnrolled3072,
		SubModUnrolled3136,
		SubModUnrolled3200,
		SubModUnrolled3264,
		SubModUnrolled3328,
		SubModUnrolled3392,
		SubModUnrolled3456,
		SubModUnrolled3520,
		SubModUnrolled3584,
		SubModUnrolled3648,
		SubModUnrolled3712,
		SubModUnrolled3776,
		SubModUnrolled3840,
		SubModUnrolled3904,
		SubModUnrolled3968,
		SubModUnrolled4032,
		SubModUnrolled4096,
	}
	mulMontImpls := []arithFunc{
		MulMontUnrolled64,
		MulMontUnrolled128,
		MulMontUnrolled192,
		MulMontUnrolled256,
		MulMontUnrolled320,
		MulMontUnrolled384,
		MulMontUnrolled448,
		MulMontUnrolled512,
		MulMontUnrolled576,
		MulMontUnrolled640,
		MulMontUnrolled704,
		MulMontUnrolled768,
		MulMontUnrolled832,
		MulMontUnrolled896,
		MulMontUnrolled960,
		MulMontNonUnrolled1024,
		MulMontNonUnrolled1088,
		MulMontNonUnrolled1152,
		MulMontNonUnrolled1216,
		MulMontNonUnrolled1280,
		MulMontNonUnrolled1344,
		MulMontNonUnrolled1408,
		MulMontNonUnrolled1472,
		MulMontNonUnrolled1536,
		MulMontNonUnrolled1600,
		MulMontNonUnrolled1664,
		MulMontNonUnrolled1728,
		MulMontNonUnrolled1792,
		MulMontNonUnrolled1856,
		MulMontNonUnrolled1920,
		MulMontNonUnrolled1984,
		MulMontNonUnrolled2048,
		MulMontNonUnrolled2112,
		MulMontNonUnrolled2176,
		MulMontNonUnrolled2240,
		MulMontNonUnrolled2304,
		MulMontNonUnrolled2368,
		MulMontNonUnrolled2432,
		MulMontNonUnrolled2496,
		MulMontNonUnrolled2560,
		MulMontNonUnrolled2624,
		MulMontNonUnrolled2688,
		MulMontNonUnrolled2752,
		MulMontNonUnrolled2816,
		MulMontNonUnrolled2880,
		MulMontNonUnrolled2944,
		MulMontNonUnrolled3008,
		MulMontNonUnrolled3072,
		MulMontNonUnrolled3136,
		MulMontNonUnrolled3200,
		MulMontNonUnrolled3264,
		MulMontNonUnrolled3328,
		MulMontNonUnrolled3392,
		MulMontNonUnrolled3456,
		MulMontNonUnrolled3520,
		MulMontNonUnrolled3584,
		MulMontNonUnrolled3648,
		MulMontNonUnrolled3712,
		MulMontNonUnrolled3776,
		MulMontNonUnrolled3840,
		MulMontNonUnrolled3904,
		MulMontNonUnrolled3968,
		MulMontNonUnrolled4032,
		MulMontNonUnrolled4096,
	}

	return ArithPreset{addModImpls, subModImpls, mulMontImpls, "unrolled", 65,
		makeBenchRanges(1, 16,
			1, 16,
			1, 14),
	}
}

func NonUnrolledPreset() ArithPreset {
	addModImpls := []arithFunc{
		AddModNonUnrolled64,
		AddModNonUnrolled128,
		AddModNonUnrolled192,
		AddModNonUnrolled256,
		AddModNonUnrolled320,
		AddModNonUnrolled384,
		AddModNonUnrolled448,
		AddModNonUnrolled512,
		AddModNonUnrolled576,
		AddModNonUnrolled640,
		AddModNonUnrolled704,
		AddModNonUnrolled768,
		AddModNonUnrolled832,
		AddModNonUnrolled896,
		AddModNonUnrolled960,
		AddModNonUnrolled1024,
		AddModNonUnrolled1088,
		AddModNonUnrolled1152,
		AddModNonUnrolled1216,
		AddModNonUnrolled1280,
		AddModNonUnrolled1344,
		AddModNonUnrolled1408,
		AddModNonUnrolled1472,
		AddModNonUnrolled1536,
		AddModNonUnrolled1600,
		AddModNonUnrolled1664,
		AddModNonUnrolled1728,
		AddModNonUnrolled1792,
		AddModNonUnrolled1856,
		AddModNonUnrolled1920,
		AddModNonUnrolled1984,
		AddModNonUnrolled2048,
		AddModNonUnrolled2112,
		AddModNonUnrolled2176,
		AddModNonUnrolled2240,
		AddModNonUnrolled2304,
		AddModNonUnrolled2368,
		AddModNonUnrolled2432,
		AddModNonUnrolled2496,
		AddModNonUnrolled2560,
		AddModNonUnrolled2624,
		AddModNonUnrolled2688,
		AddModNonUnrolled2752,
		AddModNonUnrolled2816,
		AddModNonUnrolled2880,
		AddModNonUnrolled2944,
		AddModNonUnrolled3008,
		AddModNonUnrolled3072,
		AddModNonUnrolled3136,
		AddModNonUnrolled3200,
		AddModNonUnrolled3264,
		AddModNonUnrolled3328,
		AddModNonUnrolled3392,
		AddModNonUnrolled3456,
		AddModNonUnrolled3520,
		AddModNonUnrolled3584,
		AddModNonUnrolled3648,
		AddModNonUnrolled3712,
		AddModNonUnrolled3776,
		AddModNonUnrolled3840,
		AddModNonUnrolled3904,
		AddModNonUnrolled3968,
		AddModNonUnrolled4032,
		AddModNonUnrolled4096,
	}

	subModImpls := []arithFunc{
		SubModNonUnrolled64,
		SubModNonUnrolled128,
		SubModNonUnrolled192,
		SubModNonUnrolled256,
		SubModNonUnrolled320,
		SubModNonUnrolled384,
		SubModNonUnrolled448,
		SubModNonUnrolled512,
		SubModNonUnrolled576,
		SubModNonUnrolled640,
		SubModNonUnrolled704,
		SubModNonUnrolled768,
		SubModNonUnrolled832,
		SubModNonUnrolled896,
		SubModNonUnrolled960,
		SubModNonUnrolled1024,
		SubModNonUnrolled1088,
		SubModNonUnrolled1152,
		SubModNonUnrolled1216,
		SubModNonUnrolled1280,
		SubModNonUnrolled1344,
		SubModNonUnrolled1408,
		SubModNonUnrolled1472,
		SubModNonUnrolled1536,
		SubModNonUnrolled1600,
		SubModNonUnrolled1664,
		SubModNonUnrolled1728,
		SubModNonUnrolled1792,
		SubModNonUnrolled1856,
		SubModNonUnrolled1920,
		SubModNonUnrolled1984,
		SubModNonUnrolled2048,
		SubModNonUnrolled2112,
		SubModNonUnrolled2176,
		SubModNonUnrolled2240,
		SubModNonUnrolled2304,
		SubModNonUnrolled2368,
		SubModNonUnrolled2432,
		SubModNonUnrolled2496,
		SubModNonUnrolled2560,
		SubModNonUnrolled2624,
		SubModNonUnrolled2688,
		SubModNonUnrolled2752,
		SubModNonUnrolled2816,
		SubModNonUnrolled2880,
		SubModNonUnrolled2944,
		SubModNonUnrolled3008,
		SubModNonUnrolled3072,
		SubModNonUnrolled3136,
		SubModNonUnrolled3200,
		SubModNonUnrolled3264,
		SubModNonUnrolled3328,
		SubModNonUnrolled3392,
		SubModNonUnrolled3456,
		SubModNonUnrolled3520,
		SubModNonUnrolled3584,
		SubModNonUnrolled3648,
		SubModNonUnrolled3712,
		SubModNonUnrolled3776,
		SubModNonUnrolled3840,
		SubModNonUnrolled3904,
		SubModNonUnrolled3968,
		SubModNonUnrolled4032,
		SubModNonUnrolled4096,
	}
	mulMontImpls := []arithFunc{
		MulMontNonUnrolled64,
		MulMontNonUnrolled128,
		MulMontNonUnrolled192,
		MulMontNonUnrolled256,
		MulMontNonUnrolled320,
		MulMontNonUnrolled384,
		MulMontNonUnrolled448,
		MulMontNonUnrolled512,
		MulMontNonUnrolled576,
		MulMontNonUnrolled640,
		MulMontNonUnrolled704,
		MulMontNonUnrolled768,
		MulMontNonUnrolled832,
		MulMontNonUnrolled896,
		MulMontNonUnrolled960,
		MulMontNonUnrolled1024,
		MulMontNonUnrolled1088,
		MulMontNonUnrolled1152,
		MulMontNonUnrolled1216,
		MulMontNonUnrolled1280,
		MulMontNonUnrolled1344,
		MulMontNonUnrolled1408,
		MulMontNonUnrolled1472,
		MulMontNonUnrolled1536,
		MulMontNonUnrolled1600,
		MulMontNonUnrolled1664,
		MulMontNonUnrolled1728,
		MulMontNonUnrolled1792,
		MulMontNonUnrolled1856,
		MulMontNonUnrolled1920,
		MulMontNonUnrolled1984,
		MulMontNonUnrolled2048,
		MulMontNonUnrolled2112,
		MulMontNonUnrolled2176,
		MulMontNonUnrolled2240,
		MulMontNonUnrolled2304,
		MulMontNonUnrolled2368,
		MulMontNonUnrolled2432,
		MulMontNonUnrolled2496,
		MulMontNonUnrolled2560,
		MulMontNonUnrolled2624,
		MulMontNonUnrolled2688,
		MulMontNonUnrolled2752,
		MulMontNonUnrolled2816,
		MulMontNonUnrolled2880,
		MulMontNonUnrolled2944,
		MulMontNonUnrolled3008,
		MulMontNonUnrolled3072,
		MulMontNonUnrolled3136,
		MulMontNonUnrolled3200,
		MulMontNonUnrolled3264,
		MulMontNonUnrolled3328,
		MulMontNonUnrolled3392,
		MulMontNonUnrolled3456,
		MulMontNonUnrolled3520,
		MulMontNonUnrolled3584,
		MulMontNonUnrolled3648,
		MulMontNonUnrolled3712,
		MulMontNonUnrolled3776,
		MulMontNonUnrolled3840,
		MulMontNonUnrolled3904,
		MulMontNonUnrolled3968,
		MulMontNonUnrolled4032,
		MulMontNonUnrolled4096,
	}

	return ArithPreset{addModImpls, subModImpls, mulMontImpls, "non-unrolled", 65,
		makeBenchRanges(
			1, 64,
			1, 64,
			1, 64),
	}
}

func GenericMulMontPreset() ArithPreset {
	addModImpls := []arithFunc{
		AddModNonUnrolled64,
		AddModNonUnrolled128,
		AddModNonUnrolled192,
		AddModNonUnrolled256,
		AddModNonUnrolled320,
		AddModNonUnrolled384,
		AddModNonUnrolled448,
		AddModNonUnrolled512,
		AddModNonUnrolled576,
		AddModNonUnrolled640,
		AddModNonUnrolled704,
		AddModNonUnrolled768,
		AddModNonUnrolled832,
		AddModNonUnrolled896,
		AddModNonUnrolled960,
		AddModNonUnrolled1024,
		AddModNonUnrolled1088,
		AddModNonUnrolled1152,
		AddModNonUnrolled1216,
		AddModNonUnrolled1280,
		AddModNonUnrolled1344,
		AddModNonUnrolled1408,
		AddModNonUnrolled1472,
		AddModNonUnrolled1536,
		AddModNonUnrolled1600,
		AddModNonUnrolled1664,
		AddModNonUnrolled1728,
		AddModNonUnrolled1792,
		AddModNonUnrolled1856,
		AddModNonUnrolled1920,
		AddModNonUnrolled1984,
		AddModNonUnrolled2048,
		AddModNonUnrolled2112,
		AddModNonUnrolled2176,
		AddModNonUnrolled2240,
		AddModNonUnrolled2304,
		AddModNonUnrolled2368,
		AddModNonUnrolled2432,
		AddModNonUnrolled2496,
		AddModNonUnrolled2560,
		AddModNonUnrolled2624,
		AddModNonUnrolled2688,
		AddModNonUnrolled2752,
		AddModNonUnrolled2816,
		AddModNonUnrolled2880,
		AddModNonUnrolled2944,
		AddModNonUnrolled3008,
		AddModNonUnrolled3072,
		AddModNonUnrolled3136,
		AddModNonUnrolled3200,
		AddModNonUnrolled3264,
		AddModNonUnrolled3328,
		AddModNonUnrolled3392,
		AddModNonUnrolled3456,
		AddModNonUnrolled3520,
		AddModNonUnrolled3584,
		AddModNonUnrolled3648,
		AddModNonUnrolled3712,
		AddModNonUnrolled3776,
		AddModNonUnrolled3840,
		AddModNonUnrolled3904,
		AddModNonUnrolled3968,
		AddModNonUnrolled4032,
		AddModNonUnrolled4096,
	}

	subModImpls := []arithFunc{
		SubModNonUnrolled64,
		SubModNonUnrolled128,
		SubModNonUnrolled192,
		SubModNonUnrolled256,
		SubModNonUnrolled320,
		SubModNonUnrolled384,
		SubModNonUnrolled448,
		SubModNonUnrolled512,
		SubModNonUnrolled576,
		SubModNonUnrolled640,
		SubModNonUnrolled704,
		SubModNonUnrolled768,
		SubModNonUnrolled832,
		SubModNonUnrolled896,
		SubModNonUnrolled960,
		SubModNonUnrolled1024,
		SubModNonUnrolled1088,
		SubModNonUnrolled1152,
		SubModNonUnrolled1216,
		SubModNonUnrolled1280,
		SubModNonUnrolled1344,
		SubModNonUnrolled1408,
		SubModNonUnrolled1472,
		SubModNonUnrolled1536,
		SubModNonUnrolled1600,
		SubModNonUnrolled1664,
		SubModNonUnrolled1728,
		SubModNonUnrolled1792,
		SubModNonUnrolled1856,
		SubModNonUnrolled1920,
		SubModNonUnrolled1984,
		SubModNonUnrolled2048,
		SubModNonUnrolled2112,
		SubModNonUnrolled2176,
		SubModNonUnrolled2240,
		SubModNonUnrolled2304,
		SubModNonUnrolled2368,
		SubModNonUnrolled2432,
		SubModNonUnrolled2496,
		SubModNonUnrolled2560,
		SubModNonUnrolled2624,
		SubModNonUnrolled2688,
		SubModNonUnrolled2752,
		SubModNonUnrolled2816,
		SubModNonUnrolled2880,
		SubModNonUnrolled2944,
		SubModNonUnrolled3008,
		SubModNonUnrolled3072,
		SubModNonUnrolled3136,
		SubModNonUnrolled3200,
		SubModNonUnrolled3264,
		SubModNonUnrolled3328,
		SubModNonUnrolled3392,
		SubModNonUnrolled3456,
		SubModNonUnrolled3520,
		SubModNonUnrolled3584,
		SubModNonUnrolled3648,
		SubModNonUnrolled3712,
		SubModNonUnrolled3776,
		SubModNonUnrolled3840,
		SubModNonUnrolled3904,
		SubModNonUnrolled3968,
		SubModNonUnrolled4032,
		SubModNonUnrolled4096,
	}
	mulMontImpls := []arithFunc{
		MulMontNonInterleaved,
		MulMontNonInterleaved,
		MulMontNonInterleaved,
		MulMontNonInterleaved,
		MulMontNonInterleaved,
		MulMontNonInterleaved,
		MulMontNonInterleaved,
		MulMontNonInterleaved,
		MulMontNonInterleaved,
		MulMontNonInterleaved,
		MulMontNonInterleaved,
		MulMontNonInterleaved,
		MulMontNonInterleaved,
		MulMontNonInterleaved,
		MulMontNonInterleaved,
		MulMontNonInterleaved,
		MulMontNonInterleaved,
		MulMontNonInterleaved,
		MulMontNonInterleaved,
		MulMontNonInterleaved,
		MulMontNonInterleaved,
		MulMontNonInterleaved,
		MulMontNonInterleaved,
		MulMontNonInterleaved,
		MulMontNonInterleaved,
		MulMontNonInterleaved,
		MulMontNonInterleaved,
		MulMontNonInterleaved,
		MulMontNonInterleaved,
		MulMontNonInterleaved,
		MulMontNonInterleaved,
		MulMontNonInterleaved,
		MulMontNonInterleaved,
		MulMontNonInterleaved,
		MulMontNonInterleaved,
		MulMontNonInterleaved,
		MulMontNonInterleaved,
		MulMontNonInterleaved,
		MulMontNonInterleaved,
		MulMontNonInterleaved,
		MulMontNonInterleaved,
		MulMontNonInterleaved,
		MulMontNonInterleaved,
		MulMontNonInterleaved,
		MulMontNonInterleaved,
		MulMontNonInterleaved,
		MulMontNonInterleaved,
		MulMontNonInterleaved,
		MulMontNonInterleaved,
		MulMontNonInterleaved,
		MulMontNonInterleaved,
		MulMontNonInterleaved,
		MulMontNonInterleaved,
		MulMontNonInterleaved,
		MulMontNonInterleaved,
		MulMontNonInterleaved,
		MulMontNonInterleaved,
		MulMontNonInterleaved,
		MulMontNonInterleaved,
		MulMontNonInterleaved,
		MulMontNonInterleaved,
		MulMontNonInterleaved,
		MulMontNonInterleaved,
		MulMontNonInterleaved,
	}

	return ArithPreset{addModImpls, subModImpls, mulMontImpls, "generic", 0,
		makeBenchRanges(
			0, 0,
			0, 0,
			32, 64),
	}
}

func DefaultPreset() ArithPreset {
	return NonUnrolledPreset()
}

func AllPresets() []ArithPreset {
	return []ArithPreset{
		GenericMulMontPreset(),
		NonUnrolledPreset(),
		UnrolledPreset(),
		Asm384Preset(),
	}
}
